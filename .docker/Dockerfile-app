# Install Composer dependencies
FROM composer:2 AS build-composer
WORKDIR /app
COPY . .
RUN composer install --no-dev --optimize-autoloader --no-interaction

# Install NPM dependencies and run Vite
FROM node:20 AS build-npm
WORKDIR /app
COPY . .
RUN npm install
ENV NODE_ENV=production
RUN npm run build

# Set up the application
FROM php:8.2-fpm AS app
WORKDIR /var/www/html

# Override some PHP configuration
COPY .docker/fpm-overrides.conf /usr/local/etc/php-fpm.d/zzz-overrides.conf
COPY .docker/php-overrides.ini $PHP_INI_DIR/conf.d/overrides.ini

# Install necessary packages and PHP extensions
RUN apt-get update && apt-get install -y supervisor cron libfcgi-bin libpq-dev && apt-get clean && rm -rf /var/lib/apt/lists/*
RUN docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql && docker-php-ext-install pdo_pgsql
RUN pecl install redis-5.3.7 && docker-php-ext-enable redis

# Copy everything over
COPY --chown=www-data:www-data . .
COPY --from=build-composer /usr/bin/composer /usr/bin/composer
COPY --chown=www-data:www-data --from=build-composer /app/vendor/ ./vendor/
COPY --chown=www-data:www-data --from=build-npm /app/public/build/ ./public/build/

# Pre-cache the views and discovered event listeners, as they are guaranteed to not change or rely on configuration
USER www-data
RUN php artisan view:cache
RUN php artisan event:cache
USER root

# Configure cron
RUN echo '* * * * * cd /var/www/html && /usr/local/bin/php artisan schedule:run >> /dev/null 2>&1' >> /etc/cron.d/laravel-scheduler \
	&& crontab -u www-data /etc/cron.d/laravel-scheduler \
	&& chmod u+s /usr/sbin/cron

# Configure supervisor
COPY .docker/supervisord.ini /etc/supervisor.d/supervisord.ini
ENTRYPOINT ["supervisord", "-n", "-c", "/etc/supervisor.d/supervisord.ini"]

# Set up basic healthcheck
HEALTHCHECK --interval=10s --timeout=3s \
  CMD SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000 || exit 1
