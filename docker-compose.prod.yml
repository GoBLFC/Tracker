version: '3'
services:
  app:
    build:
      context: ./
      dockerfile: .docker/Dockerfile-app
    restart: always
    volumes:
      - app-logs:/var/www/html/storage/logs
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:15
    restart: always
    env_file:
      - postgres.env
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: sh -c 'exec redis-server --save 60 1 --loglevel warning --requirepass "${REDIS_PASSWORD:?REDIS_PASSWORD not provided}"'
    restart: always
    env_file:
      - redis.env
    volumes:
      - redis:/data

  nginx:
    build:
      context: ./
      dockerfile: .docker/Dockerfile-nginx
    restart: always
    environment:
      NGINX_HOST: vtracker.test
      NGINX_HTTP_PORT: 80
      NGINX_HTTPS_PORT: 443
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - .docker/nginx/snippets:/etc/nginx/snippets
      - .docker/nginx/templates:/etc/nginx/templates
      - .docker/nginx/generate-temp-cert.sh:/docker-entrypoint.d/98-generate-temp-cert.sh
      - .docker/nginx/autoreload.sh:/docker-entrypoint.d/99-autoreload.sh
      - certbot-conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    environment:
      LETSENCRYPT_DOMAIN: tracker.gobltc.com
      LETSENCRYPT_EMAIL: cloud@goblfc.org
      LETSENCRYPT_DRY_RUN: true
    volumes:
      - certbot-conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
      - .docker/certbot-runner.sh:/usr/local/bin/certbot-runner
    entrypoint: /bin/sh /usr/local/bin/certbot-runner
    depends_on:
      - nginx

volumes:
  app-logs:
  postgres:
  redis:
  certbot-conf:
  certbot-www:
