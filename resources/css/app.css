@import "tailwindcss" source(none);
@import "tailwindcss-primeui";

@source "../js";
@source "../views";
@source inline("{sm:,md:,lg:,xl:,}not-sr-only");

@custom-variant dark (&:where(.dark, .dark *));

@layer theme, base, primevue, components, utilities;

@layer base {
	:root {
		background-color: var(--p-surface-50);

		@variant dark {
			background-color: var(--p-surface-950);
			color: var(--p-primary-50);
		}
	}

	:root,
	body,
	#app {
		height: 100%;
	}

	body,
	#app {
		position: relative;
		z-index: -50;
	}

	/* Links */
	a {
		color: var(--p-primary-color);
		@apply transition-colors;
	}

	a:hover,
	a:focus {
		color: var(--p-primary-hover-color);
	}

	/* Buttons */
	button:not(:disabled),
	[role="button"]:not(:disabled) {
		cursor: pointer;
	}
}

@layer components {
	/* Border progress bar */
	@property --progress {
		syntax: "<percentage>";
		initial-value: 0%;
		inherits: true;
	}

	@property --progress-width {
		syntax: "<length-percentage>";
		initial-value: 2px;
		inherits: true;
	}

	@property --progress-radius {
		syntax: "<length-percentage>";
		initial-value: 0;
		inherits: true;
	}

	@property --progress-color {
		syntax: "<color>";
		initial-value: white;
		inherits: true;
	}

	.border-progress {
		position: relative;
	}

	.border-progress::after {
		content: "";
		display: block;
		position: absolute;
		z-index: -10;
		inset: calc(var(--progress-width) * -1);
		border-radius: var(--progress-radius);
		background-color: transparent;
		background-image: conic-gradient(
			var(--progress-color),
			var(--progress-color) var(--progress),
			transparent var(--progress)
		);
		transition: --progress 1s linear;
	}
}

/* Workaround to avoid conflicting sr-only class from FontAwesome */
@utility tw-sr-only {
	@apply sr-only;
}
